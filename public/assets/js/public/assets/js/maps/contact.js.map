{"version":3,"sources":["contact.js","jpi/plugins/ajax.js"],"names":[],"mappingsfile":"../../../../contact.js","sourcesContent":["var JPI = JPI || {};\r\n\r\n//=include ./jpi/plugins/ajax.js\r\n\r\n;(function() {\r\n\r\n    \"use strict\";\r\n\r\n    var global = {\r\n        form: null,\r\n        inputs: null,\r\n        emailInput: null,\r\n        messageInput: null,\r\n        subjectInput: null,\r\n        emailFeedback: null,\r\n        messageFeedback: null,\r\n        formFeedback: null,\r\n        submitButton: null,\r\n    };\r\n\r\n    var fn = {\r\n\r\n        reset: function() {\r\n            global.inputs.attr(\"disabled\", false);\r\n            global.submitButton.prop(\"disabled\", false)\r\n                .html(global.submitButton.attr(\"data-initial-text\"))\r\n            ;\r\n        },\r\n\r\n        // Show appropriate & relevant feedback to the user after an attempt of sending a message\r\n        renderResponse: function(response) {\r\n            fn.reset();\r\n\r\n            // Check if message was sent\r\n            if (response.ok) {\r\n                if (response.feedback) {\r\n                    global.formFeedback.removeClass(\"field__error\").addClass(\"field__feedback\");\r\n                }\r\n\r\n                global.emailInput.val(\"\");\r\n                global.messageInput.val(\"\");\r\n                global.subjectInput.val(\"\");\r\n                global.form.find(\".field\").hide();\r\n                global.submitButton.hide();\r\n            }\r\n            else {\r\n                if (response.feedback) {\r\n                    global.formFeedback.removeClass(\"field__feedback\").addClass(\"field__error\");\r\n                }\r\n                if (response.messageFeedback) {\r\n                    global.messageFeedback.text(response.messageFeedback).show(200);\r\n                }\r\n                if (response.emailAddressFeedback) {\r\n                    global.emailFeedback.text(response.emailAddressFeedback).show(200);\r\n                }\r\n            }\r\n\r\n            if (response.feedback) {\r\n                global.formFeedback.text(response.feedback).show(200);\r\n            }\r\n        },\r\n\r\n        // Render an error message when AJAX has errored\r\n        renderErrorMessage: function() {\r\n            global.formFeedback.text(\"Something went wrong, please try again later.\")\r\n                .removeClass(\"field__feedback\")\r\n                .addClass(\"field__error\")\r\n                .show(200);\r\n\r\n            fn.reset();\r\n        },\r\n\r\n        validateEmail: function(isForm) {\r\n            var emailAddress = global.emailInput.val();\r\n\r\n            global.formFeedback.hide(200);\r\n            global.emailInput.removeClass(\"input--valid\");\r\n\r\n            if (emailAddress.trim() === \"\") {\r\n                if (isForm) {\r\n                    global.emailInput.addClass(\"input--invalid\");\r\n                    global.emailFeedback.text(\"Email address must be provided and valid.\").show(200);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            var validEmailPattern = /\\b[\\w._-]+@[\\w-]+.[\\w]{2,}\\b/im;\r\n            var emailValidationTest = validEmailPattern.test(emailAddress);\r\n\r\n            if (emailValidationTest) {\r\n                global.emailInput.removeClass(\"input--invalid\").addClass(\"input--valid\");\r\n                global.emailFeedback.hide(200);\r\n                return true;\r\n            }\r\n\r\n            if (isForm) {\r\n                global.emailInput.addClass(\"input--invalid\");\r\n                global.emailFeedback.text(\"Email address must be valid.\").show(200);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        validateMessage: function(isForm) {\r\n            var message = global.messageInput.val();\r\n\r\n            global.formFeedback.hide(200);\r\n            global.messageInput.removeClass(\"input--valid\");\r\n\r\n            if (message.trim() !== \"\") {\r\n                global.messageInput.removeClass(\"input--invalid\").addClass(\"input--valid\");\r\n                global.messageFeedback.hide(200);\r\n                return true;\r\n            }\r\n\r\n            if (isForm) {\r\n                global.messageInput.addClass(\"input--invalid\");\r\n                global.messageFeedback.text(\"Message must be filled out.\").show(200);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        submit: function() {\r\n            global.inputs.attr(\"disabled\", true);\r\n            global.submitButton.prop(\"disabled\", true)\r\n                .html(global.submitButton.attr(\"data-loading-text\"))\r\n            ;\r\n\r\n            var isEmailValid = fn.validateEmail(true);\r\n            var isMessageValid = fn.validateMessage(true);\r\n\r\n            if (isEmailValid && isMessageValid) {\r\n                JPI.ajax.request({\r\n                    method: \"POST\",\r\n                    url: \"/contact/\",\r\n                    data: {\r\n                        emailAddress: global.emailInput.val(),\r\n                        subject: global.subjectInput.val(),\r\n                        message: global.messageInput.val(),\r\n                    },\r\n                    onSuccess: fn.renderResponse,\r\n                    onError: fn.renderErrorMessage,\r\n                });\r\n            }\r\n            else {\r\n                fn.reset();\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        initListeners: function() {\r\n            global.subjectInput.on(\"keyup\", function() {\r\n                global.formFeedback.hide(200);\r\n            });\r\n            global.emailInput.on(\"input\", function() {\r\n                fn.validateEmail();\r\n            });\r\n            global.messageInput.on(\"input\", function() {\r\n                fn.validateMessage();\r\n            });\r\n\r\n            global.form.on(\"submit\", fn.submit);\r\n        },\r\n\r\n        init: function() {\r\n            global.form = jQuery(\".contact-form\");\r\n\r\n            global.inputs = global.form.find(\".input\");\r\n            global.emailInput = jQuery(\".contact-form__email\");\r\n            global.messageInput = jQuery(\".contact-form__message\");\r\n            global.subjectInput = jQuery(\".contact-form__subject\");\r\n            global.emailFeedback = jQuery(\".contact-form__email-feedback\");\r\n            global.messageFeedback = jQuery(\".contact-form__message-feedback\");\r\n            global.formFeedback = jQuery(\".contact-form__feedback\");\r\n            global.submitButton = jQuery(\".contact-form__submit\");\r\n\r\n            fn.initListeners();\r\n        },\r\n    };\r\n\r\n    jQuery(fn.init);\r\n\r\n})();\r\n",";JPI.ajax = (function() {\r\n\r\n    \"use strict\";\r\n\r\n    var fn = {\r\n\r\n        // Display feedback from server if there is one otherwise output generic message\r\n        checkAndRenderError: function(response, errorRenderer, genericMessage) {\r\n            var message = genericMessage || \"\";\r\n            if (response) {\r\n                if (response.error) {\r\n                    message = response.error;\r\n                } else if (response.message) {\r\n                    message = response.message;\r\n                }\r\n            }\r\n\r\n            if (message) {\r\n                errorRenderer(message);\r\n            }\r\n        },\r\n\r\n        // Loop through data to see if it exists and if it does run a function on each row\r\n        renderRowsOrError: function(response, rowRenderer, errorRenderer, genericMessage) {\r\n            // If data/rows exists, For each row run a function\r\n            if (response && response.data && response.data.length) {\r\n                for (var i = 0; i < response.data.length; i++) {\r\n                    if ({}.hasOwnProperty.call(response.data, i)) {\r\n                        rowRenderer(response.data[i]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            // Otherwise check feedback and show user and return false as data isn't there\r\n            fn.checkAndRenderError(response, errorRenderer, genericMessage);\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Function for sending XHR requests\r\n         *\r\n         * @param request Object of necessary data needed to do a HTTP request\r\n         * {\r\n         *     \"method\": HTTP Method (string),\r\n         *     \"url\": URL to load (string),\r\n         *     \"data\": object of payload,\r\n         *     \"onSuccess\": function to run when XHR request is successful\r\n         *     \"onError\": function to run when there's an error\r\n         * }\r\n         */\r\n        request: function(request) {\r\n            return jQuery.ajax({\r\n                url: request.url,\r\n                method: request.method.toUpperCase(),\r\n                data: request.data,\r\n                dataType: \"json\",\r\n                success: request.onSuccess,\r\n                error: function () {\r\n                    request.onError(\"Error Loading Content.\");\r\n                },\r\n            });\r\n        },\r\n    };\r\n\r\n    return {\r\n        renderRowsOrError: fn.renderRowsOrError,\r\n        request: fn.request,\r\n    };\r\n})();\r\n"]}