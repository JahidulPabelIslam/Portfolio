{"version":3,"sources":["portfolio.js","jpi/plugins/templating.js","jpi/plugins/ajax.js","jpi/plugins/modal.js","jpi/plugins/slide-show.js","jpi/plugins/expanded-slide-show.js","jpi/api.js","jpi/components/projects.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACplxfile":"../portfolio.js","sourcesContent":["var JPI = JPI || {};\n\n//=include ./jpi/plugins/templating.js\n//=include ./jpi/plugins/ajax.js\n//=include ./jpi/plugins/modal.js\n//=include ./jpi/plugins/slide-show.js\n//=include ./jpi/plugins/expanded-slide-show.js\n//=include ./jpi/api.js\n//=include ./jpi/components/projects.js\n",";// Handles all the general JS templating stuff - for use out of Template class as well\nJPI.templating = new function() {\n\n    \"use strict\";\n\n    this.moustaches = {};\n\n    // Get a ReEx of a 'moustache' for the field to replace (e.g. `{{ fieldName }}` or `{{fieldName}}`)\n    this.getMoustache = function(field) {\n        if (!this.moustaches[field]) {\n            this.moustaches[field] = new RegExp(\"{{2} ?\" + field + \" ?}{2}\", \"g\");\n        }\n\n        return this.moustaches[field];\n    };\n\n    return {\n        getMoustache: this.getMoustache.bind(this),\n    };\n};\n\n// A Template 'class' that holds all necessary logic to load a template, replace/process with data and render\nJPI.Template = (function() {\n\n    \"use strict\";\n\n    return function(template, context) {\n\n        this.context = context || {};\n\n        this.replace = function(field, value) {\n            var type = typeof value;\n\n            if (type === \"string\" || type === \"number\") {\n                var moustache = JPI.templating.getMoustache(field);\n                template = template.replace(moustache, value);\n            }\n            else if (type === \"object\") {\n                for (var innerField in value) {\n                    if ({}.hasOwnProperty.call(value, innerField)) {\n                        var innerKey = field ? field + \".\" + innerField : innerField;\n                        template = this.replace(innerKey, value[innerField]);\n                    }\n                }\n            }\n\n            return template;\n        };\n\n        this.process = function(data) {\n            if (data) {\n                this.replace(null, data);\n            }\n        };\n\n        this.get = function() {\n            this.process(context);\n            return template;\n        };\n\n        this.renderIn = function(parentElem) {\n            parentElem.append(this.get());\n        };\n    };\n})();\n\n",";JPI.ajax = new (function() {\n\n    \"use strict\";\n\n    // Display feedback from server if there is one otherwise output generic message\n    this.checkAndRenderError = function(response, errorRenderer, genericMessage) {\n        var message = genericMessage || \"\";\n        if (response) {\n            if (response.error) {\n                message = response.error;\n            } else if (response.message) {\n                message = response.message;\n            }\n        }\n\n        if (message) {\n            errorRenderer(message);\n        }\n    };\n\n    // Loop through data to see if it exists and if it does run a function on each row\n    this.renderRowsOrError = function(response, rowRenderer, errorRenderer, genericMessage) {\n        // If data/rows exists, For each row run a function\n        if (response && response.data && response.data.length) {\n            for (var i = 0; i < response.data.length; i++) {\n                if ({}.hasOwnProperty.call(response.data, i)) {\n                    rowRenderer(response.data[i]);\n                }\n            }\n\n            return true;\n        }\n\n        // Otherwise check feedback and show user and return false as data isn't there\n        this.checkAndRenderError(response, errorRenderer, genericMessage);\n        return false;\n    };\n\n    /**\n     * Function for sending XHR requests\n     *\n     * @param request Object of necessary data needed to do a HTTP request\n     * {\n     *     \"method\": HTTP Method (string),\n     *     \"url\": URL to load (string),\n     *     \"data\": object of payload,\n     *     \"onSuccess\": function to run when XHR request is successful\n     *     \"onError\": function to run when there's an error\n     * }\n     */\n    this.request = function(request) {\n        return jQuery.ajax({\n            url: request.url,\n            method: request.method.toUpperCase(),\n            data: request.data,\n            dataType: \"json\",\n            success: request.onSuccess,\n            error: function () {\n                request.onError(\"Error Loading Content.\");\n            },\n        });\n    };\n\n    return {\n        renderRowsOrError: this.renderRowsOrError.bind(this),\n        request: this.request.bind(this),\n    };\n});\n",";JPI.modal = function($modal) {\n\n    \"use strict\";\n\n    this.$body = jQuery(\"body\");\n    this.$page = jQuery(\".page-container\");\n\n    this.lastFocused = null;\n\n    this.$focusables = null;\n    this.$firstFocusable = null;\n    this.$lastFocusable = null;\n\n    this.close = function() {\n        if (!$modal.hasClass(\"is-open\")) {\n            return;\n        }\n\n        this.$body.removeClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"false\");\n\n        $modal.removeClass(\"is-open\");\n        $modal.attr({\n            \"tabindex\": -1,\n            \"aria-hidden\": true,\n            \"hidden\": \"hidden\",\n        });\n\n        if (this.lastFocused) {\n            this.lastFocused.focus();\n        }\n\n        $modal.trigger(\"closed\");\n    };\n\n    this.triggerClose = function() {\n        var $closeButton = $modal.find(\".js-modal-close\");\n        if ($closeButton.length) {\n            $closeButton.trigger(\"click\");\n            return;\n        }\n\n        this.close();\n    };\n\n    this.onModalClick = function(e) {\n        // Close if clicked outside of the modal content elem\n        var $clickedElem = jQuery(e.target);\n        if (\n            $clickedElem.children(\".modal__content\").length &&\n            !$clickedElem.closest(\".modal__content\").length\n        ) {\n            this.triggerClose();\n        }\n    }\n\n    this.onBackwardTab = function(e) {\n        if (document.activeElement === this.$firstFocusable[0]) {\n            e.preventDefault();\n            this.$lastFocusable.focus();\n        }\n    };\n\n    this.onForwardTab = function(e) {\n        if (document.activeElement === this.$lastFocusable[0]) {\n            e.preventDefault();\n            this.$firstFocusable.focus();\n        }\n    };\n\n    this.onKeyDown = function(e) {\n        switch (e.keyCode || e.key) {\n            case 9:\n            case \"Tab\":\n                if (this.$focusables.length <= 1) {\n                    e.preventDefault();\n                    break;\n                }\n\n                if (e.shiftKey) {\n                    this.onBackwardTab(e);\n                }\n                else {\n                    this.onForwardTab(e);\n                }\n                break;\n            case 27:\n            case \"Escape\":\n                this.triggerClose();\n                break;\n        }\n    };\n\n    this.open = function() {\n        this.lastFocused = document.activeElement;\n\n        this.$body.addClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"true\");\n\n        $modal.attr({\n            \"tabindex\": 0,\n            \"aria-hidden\": false,\n            \"hidden\": false,\n        });\n        $modal.addClass(\"is-open\");\n\n        this.$focusables = JPI.getFocusableChildren($modal);\n        var focusablesLength = this.$focusables.length;\n        if (focusablesLength) {\n            this.$firstFocusable = jQuery(this.$focusables[0]);\n            this.$lastFocusable = jQuery(this.$focusables[focusablesLength - 1]);\n\n            this.$firstFocusable.focus();\n        }\n        else {\n            $modal.focus();\n        }\n\n        $modal.trigger(\"opened\");\n\n        $modal.on(\"click\", this.onModalClick.bind(this));\n        $modal.on(\"click\", \".js-modal-close\", this.close.bind(this));\n        $modal.on(\"keydown\", this.onKeyDown.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        close: this.close.bind(this),\n    };\n};\n",";/**\n * Holds all functions needed for a project slide show\n */\nJPI.SlideShow = function(options) {\n\n    \"use strict\";\n\n    var slideShow = this;\n\n    var defaults = {\n        selector: \".slide-show\",\n        viewportSelector: \".slide-show__viewport\",\n        slidesContainerSelector: \".slide-show__slides\",\n        slideSelector: \".slide-show__slide\",\n        bulletsSelector: \".slide-show__bullets\",\n        bulletSelector: \".slide-show__bullet\",\n        navSelector: \".slide-show__nav\",\n\n        slidesPerView: 1,\n\n        durationPerSlide: 5000, // Milliseconds\n\n        autoplay: true,\n\n        loop: true,\n    };\n\n    this.getXPosition = function(e) {\n        return e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n    };\n\n    this.removeSelector = function(selector) {\n        return selector.substring(1);\n    };\n\n    this.options = jQuery.extend(defaults, options || {});\n\n    this.options.activeSlideClass = this.removeSelector(this.options.slideSelector) + \"--active\";\n    if (this.options.bulletSelector) {\n        this.options.activeBulletClass = this.removeSelector(this.options.bulletSelector) + \"--active\";\n    }\n\n    this.$slideShow;\n    this.$viewport;\n    this.$container;\n    this.$slides;\n    this.$bulletsContainer;\n    this.$bullets;\n    this.$navs;\n\n    this.interval;\n\n    this.getConfig = function(config) {\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.desktop)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.desktop &&\n                this.options.breakpoints.desktop[config]\n            ) {\n                return this.options.breakpoints.desktop[config]\n            }\n        }\n\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.tablet)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.tablet &&\n                this.options.breakpoints.tablet[config]\n            ) {\n                return this.options.breakpoints.tablet[config]\n            }\n        }\n\n        return this.options[config];\n    };\n\n    // Resets the transition duration of a slide show\n    this.resetTransition = function() {\n        this.$container.css(\"transition-duration\", \"\");\n    };\n\n    // Widens slide show to fit all slides\n    this.widenSlideShow = function() {\n        var slideWidth = this.$viewport.innerWidth();\n        var count = this.$slides.length;\n\n        var fullWidth = slideWidth * count;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1) {\n            slideWidth = slideWidth / slidesPerView;\n\n            if (slidesPerView % 2 === 0) {\n                fullWidth = (slideWidth * count) + (slideWidth / 2);\n                var offset = slideWidth / 2;\n            } else {\n                fullWidth = (slideWidth * count) + slideWidth;\n                var offset = slideWidth;\n            }\n\n            this.$slides.first().css(\"margin-left\", offset);\n        }\n\n        this.$slides.css(\"width\", slideWidth + \"px\");\n        this.$container.css(\"width\", fullWidth + \"px\");\n    };\n\n    this.getPosition = function($slide) {\n        var offset = 0;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1 && !$slide.is(\":first-child\")) {\n            offset = $slide.innerWidth();\n\n            if (slidesPerView % 2 === 0) {\n                offset = offset / 2;\n            }\n        }\n\n        var position = $slide.position();\n\n        return \"-\" + (position.left - offset) + \"px\";\n    };\n\n    // Moves current slide to correct position\n    this.resetToCurrentSlide = function() {\n        var $activeSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n        this.$container.css({\n            transitionDuration: \"0s\",\n            left: this.getPosition($activeSlide),\n        });\n\n        this.resetTransition();\n    };\n\n    // Adjusts all slides in slide show to fit\n    this.repositionSlides = function() {\n        this.widenSlideShow();\n        this.resetToCurrentSlide();\n    };\n\n    this.setupNav = function() {\n        if (this.$navs && !this.options.loop) {\n            var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n            this.$navs.filter(\"[data-direction='previous']\").attr(\"disabled\", $currentSlide.is(\":first-child\"));\n            this.$navs.filter(\"[data-direction='next']\").attr(\"disabled\", $currentSlide.is(\":last-child\"));\n        }\n    };\n\n    this.moveToSlide = function($nextSlide) {\n        var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        $currentSlide.removeClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.filter(\".\" + this.options.activeBulletClass)\n                .removeClass(this.options.activeBulletClass)\n            ;\n        }\n        $nextSlide.addClass(this.options.activeSlideClass);\n\n        this.$container.css(\"left\", this.getPosition($nextSlide));\n\n        if (this.$bullets) {\n            var newSlideID = $nextSlide.attr(\"id\");\n            this.$bullets.filter(\"[data-slide-id='#\" + newSlideID + \"']\")\n                .addClass(this.options.activeBulletClass)\n            ;\n        }\n\n        this.setupNav();\n\n        JPI.getFocusableChildren($currentSlide).attr(\"tabindex\", -1);\n        JPI.getFocusableChildren($nextSlide).attr(\"tabindex\", \"\");\n    };\n\n    // Moves to next or previous slide\n    this.move = function(direction) {\n        var $oldSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        var $nextSlide;\n        if (direction === \"previous\") {\n            $nextSlide = $oldSlide.prev();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.last();\n            }\n        }\n        else {\n            $nextSlide = $oldSlide.next();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.first();\n            }\n        }\n\n        if ($nextSlide.length) {\n            this.moveToSlide($nextSlide);\n        } else {\n            this.resetToCurrentSlide();\n        }\n    };\n\n    // Sets up events when the user wants to change slides with drag control\n    this.onSlideDrag = function(startEvent) {\n        var dragMove, dragEnd;\n\n        var container = this.$container[0];\n        var slidesContainerLeft = this.$container.position().left;\n\n        var startX = this.getXPosition(startEvent);\n\n        var removeListeners = function() {\n            container.removeEventListener(\"touchmove\", dragMove);\n            container.removeEventListener(\"mousemove\", dragMove);\n            container.removeEventListener(\"touchend\", dragEnd);\n            container.removeEventListener(\"mouseup\", dragEnd);\n            container.removeEventListener(\"mouseleave\", dragEnd);\n        };\n        var dragCancel = function() {\n            slideShow.resetToCurrentSlide();\n            if (slideShow.options.autoplay) {\n                slideShow.resume();\n            }\n            removeListeners();\n        };\n        dragMove = function(e) {\n            var endX = slideShow.getXPosition(e);\n            var diff = startX - endX;\n\n            slideShow.$container.css({\n                transitionDuration: \"0s\",\n                left: (slidesContainerLeft - diff) + \"px\",\n            });\n        };\n        dragEnd = function(e) {\n            var endX = slideShow.getXPosition(e);\n\n            var diff = startX - endX;\n            if (Math.abs(diff) >= 15) {\n                slideShow.resetTransition();\n                slideShow.move(diff < 0 ? \"previous\" : \"next\");\n                if (slideShow.options.autoplay) {\n                    slideShow.resume();\n                }\n                removeListeners();\n                return;\n            }\n\n            dragCancel();\n        };\n\n        this.pause();\n        container.addEventListener(\"touchmove\", dragMove);\n        container.addEventListener(\"mousemove\", dragMove);\n        container.addEventListener(\"touchend\", dragEnd);\n        container.addEventListener(\"mouseup\", dragEnd);\n        container.addEventListener(\"mouseleave\", dragEnd);\n    };\n\n    // Pause a slide show by clearing the interval function on slide show id\n    this.pause = function() {\n        clearInterval(this.interval);\n    };\n\n    this.stop = function() {\n        var container = this.$container[0];\n        container.removeEventListener(\"mousedown\", this.onSlideDrag);\n        container.removeEventListener(\"touchstart\", this.onSlideDrag);\n\n        clearInterval(this.interval);\n    };\n\n    // Resumes a slide show by slide show element id\n    this.resume = function() {\n        this.interval = setInterval(function() {\n            slideShow.move(\"next\");\n        }, this.options.durationPerSlide);\n    };\n\n    // Function when bullet was clicked to change slide show to a particular slide\n    this.changeToSlide = function(e) {\n        var $bullet = jQuery(e.target);\n        var clickedSlideId = $bullet.attr(\"data-slide-id\");\n        var $nextSlide = this.$slideShow.find(clickedSlideId);\n\n        this.pause();\n        this.moveToSlide($nextSlide);\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.navigate = function(e) {\n        this.pause();\n        this.move(jQuery(e.target).attr(\"data-direction\"));\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.start = function() {\n        if (this.$bullets) {\n            this.$bullets.off(\"click\", this.changeToSlide);\n        }\n        if (this.$navs) {\n            this.$navs.off(\"click\", this.navigate);\n        }\n\n        this.$slideShow = jQuery(this.options.selector);\n        this.$viewport = this.$slideShow.find(this.options.viewportSelector);\n        this.$container = this.$slideShow.find(this.options.slidesContainerSelector);\n        this.$slides = this.$slideShow.find(this.options.slideSelector);\n\n        if (this.options.bulletsSelector && this.options.bulletSelector) {\n            this.$bulletsContainer = this.$slideShow.find(this.options.bulletsSelector);\n            this.$bullets = this.$slideShow.find(this.options.bulletSelector);\n            this.$bullets.on(\"click\", this.changeToSlide.bind(this));\n        }\n\n        this.$navs = this.$slideShow.find(this.options.navSelector);\n        if (this.$navs) {\n            this.$navs.on(\"click\", this.navigate.bind(this));\n        }\n\n        jQuery(window).on(\"orientationchange resize\", JPI.debounce(this.repositionSlides.bind(this), 150));\n\n        var count = this.$slides.length;\n\n        if (count <= 0) {\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.hide();\n            }\n            if (this.$navs) {\n                this.$navs.hide();\n            }\n\n            return;\n        }\n\n        var $firstSlide = this.$slides.first();\n\n        var $inactiveSlides = this.$slides.not($firstSlide);\n\n        JPI.getFocusableChildren($inactiveSlides).attr(\"tabindex\", -1);\n\n        $firstSlide.addClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.first().addClass(this.options.activeBulletClass);\n        }\n\n        if (count > 1) {\n            this.widenSlideShow();\n\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.show();\n            }\n            if (this.$navs) {\n                this.$navs.show();\n                this.setupNav();\n            }\n\n            this.$container[0].addEventListener(\"mousedown\", this.onSlideDrag.bind(this));\n            this.$container[0].addEventListener(\"touchstart\", this.onSlideDrag.bind(this));\n\n            if (this.options.autoplay) {\n                this.resume();\n            }\n        }\n    };\n\n    return {\n        start: this.start.bind(this),\n        pause: this.pause.bind(this),\n        resume: this.resume.bind(this),\n        stop: this.stop.bind(this),\n    }\n};\n",";/**\n * Used to expand a projects slide show\n */\nJPI.ExpandedSlideShow = function() {\n\n    \"use strict\";\n\n    this.$element = jQuery(\".expanded-slide-show\");\n    this.$currentCount = jQuery(\".expanded-slide-show__current-count\");\n    this.$nav = jQuery(\".expanded-slide-show__nav\");\n\n    this.timeout;\n\n    this.$slides = {};\n    this.current = 0;\n\n    this.modal;\n\n    this.displaySlide = function($expandedImage) {\n        $expandedImage.attr(\"src\", this.$slides[this.current].src);\n\n        this.$currentCount.text(this.current + 1);\n        var $currentBullet = jQuery(\".expanded-slide-show__bullet:eq(\" + this.current + \")\");\n        $currentBullet.addClass(\"expanded-slide-show__bullet--active\");\n    };\n\n    // Changes the current slide to new slide\n    this.changeSlide = function(newSlideIndex) {\n        if (newSlideIndex >= this.$slides.length) {\n            newSlideIndex = 0;\n        }\n        else if (newSlideIndex < 0) {\n            newSlideIndex = this.$slides.length - 1;\n        }\n\n        if (newSlideIndex === this.current) {\n            return;\n        }\n\n        this.current = newSlideIndex;\n\n        var $expandedImageOld = jQuery(\".expanded-slide-show__image--active\");\n        var $expandedImageNew = jQuery(\".expanded-slide-show__image\").not($expandedImageOld);\n\n        jQuery(\".expanded-slide-show__bullet--active\").removeClass(\"expanded-slide-show__bullet--active\");\n        this.displaySlide($expandedImageNew);\n\n        $expandedImageNew.addClass(\"expanded-slide-show__image--active\");\n        $expandedImageOld.removeClass(\"expanded-slide-show__image--active\");\n    };\n    this.next = function() {\n        this.changeSlide(this.current + 1);\n    };\n    this.previous = function() {\n        this.changeSlide(this.current - 1);\n    };\n\n    this.onNavClick = function(e) {\n        var direction = jQuery(e.target).attr(\"data-direction\");\n        this[direction]();\n    };\n\n    this.onBulletClick = function(e) {\n        var slideId = jQuery(e.target).attr(\"data-slide-id\");\n        slideId = JPI.getInt(slideId);\n        this.changeSlide(slideId);\n    };\n\n    this.onClose = function() {\n        this.$element.removeClass(\"expanded-slide-show--closing\");\n        this.modal.close();\n        this.timeout = null;\n    };\n\n    this.close = function() {\n        this.$element.removeClass(\"expanded-slide-show--open\")\n            .addClass(\"expanded-slide-show--closing\")\n        ;\n\n        this.timeout = setTimeout(this.onClose.bind(this), 990);\n\n        jQuery(\".expanded-slide-show__close\").off(\"click\", this.close);\n    };\n\n    this.onCloseClick = function(e) {\n        e.stopPropagation();\n        this.close();\n    }\n\n    // Sets up slide show when image is clicked on\n    this.open = function(slide, groupSelector) {\n        clearTimeout(this.timeout);\n\n        this.$slides = jQuery(slide).parents(groupSelector).find(\".js-expandable-image\");\n\n        var slidesCount = this.$slides.length;\n\n        jQuery(\".expanded-slide-show__total-count\").text(slidesCount);\n\n        var $bulletsContainer = jQuery(\".expanded-slide-show__bullets\");\n        $bulletsContainer.text(\"\");\n\n        // Only show navigations if there are more than one slide show image to slide through\n        if (slidesCount > 1) {\n            // Loops through all slide shows images and set up a bullet navigation for each\n            for (var i = 0; i < slidesCount; i++) {\n                // Checks if the current loop is the current image on slideShow\n                if (this.$slides[i] === slide) {\n                    this.current = i;\n                }\n\n                // Set up bullet navigation for slide\n                JPI.renderNewElement(\"button\", $bulletsContainer, {\n                    \"class\": \"expanded-slide-show__bullet\",\n                    \"data-slide-id\": i,\n                });\n            }\n\n            this.$nav.show();\n        }\n        else {\n            this.$nav.hide();\n        }\n\n        this.displaySlide(jQuery(\".expanded-slide-show__image--active\"));\n        this.modal = new JPI.modal(this.$element);\n        this.modal.open();\n        this.$element.addClass(\"expanded-slide-show--open\");\n\n        this.$nav.on(\"click\", this.onNavClick.bind(this));\n        jQuery(\".expanded-slide-show__bullet\").on(\"click\", this.onBulletClick.bind(this));\n        jQuery(\".expanded-slide-show__close\").on(\"click\", this.onCloseClick.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        next: this.next.bind(this),\n        previous: this.previous.bind(this),\n        close: this.close.bind(this),\n    }\n}\n",";JPI.api = (function() {\n\n    \"use strict\";\n\n    var dateFormat = new Intl.DateTimeFormat(\"default\", {\n        month: \"long\",\n        year: \"numeric\",\n    });\n\n    // Helper function to format Project data from the API to the necessary format for the Website\n    var formatProjectData = function(project) {\n        if (project.date) {\n            var date = new Date(project.date);\n            project.date = dateFormat.format(date);\n        }\n\n        return project;\n    };\n\n    return {\n        formatProjectData: formatProjectData,\n    }\n\n})();\n",";(new (function() {\n\n    \"use strict\";\n\n    var projects = this;\n\n    this.url = new URL(window.location);\n\n    this.$body = jQuery(\"body\");\n\n    this.$projectType = jQuery(\".js-project-type\");\n\n    this.$projects = jQuery(\".projects__items\");\n\n    this.$loading = jQuery(\".projects__loading\");\n    this.$error = jQuery(\".projects__error\");\n    this.$pagination = jQuery(\".projects__pagination\");\n\n    this.modalSelector = \".detailed-project\";\n\n    this.$modal = jQuery(this.modalSelector);\n    this.modal = new JPI.modal(this.$modal);\n    this.$modalSlidesContainer = this.$modal.find(\".slide-show__slides\");\n    this.modalSlideShow = new JPI.SlideShow({\n        selector: \"#detailed-project-slide-show\",\n    });\n\n    this.page = JPI.getInt(jQuery(\".js-page\").val(), 1);\n\n    this.projectTemplate = jQuery(\"#project-template\").text();\n    this.slideTemplate = jQuery(\"#slide-template\").text();\n    this.bulletTemplate = jQuery(\"#slide-bullet-template\").text();\n\n    this.projects = {};\n\n    this.renderError = function(error) {\n        this.$error.text(error).show(600);\n        this.$pagination.text(\"\").hide(600);\n        this.$loading.hide(600);\n    };\n\n    this.renderPaginationItem = function(page, $container, isCurrent) {\n        var url = this.getNewURL(page);\n        url += this.url.search;\n\n        var classes = [\"pagination__link\"];\n        if (isCurrent) {\n            classes.push(\"pagination__link--active\");\n        }\n        var $link = JPI.createElement(\"a\", {\n            \"class\": classes.join(\" \"),\n            \"text\": page,\n            \"href\": url,\n        });\n\n        JPI.renderNewElement(\"li\", $container, {\n            class: \"pagination__item\",\n            html: $link,\n        });\n    };\n\n    // Adds pagination buttons/elements to the page\n    this.renderPagination = function(totalProjects) {\n        if (totalProjects > JPI.projects.perPage) {\n            var currentPage = this.page;\n\n            var totalPages = Math.ceil(totalProjects / JPI.projects.perPage);\n            for (var page = 1; page <= totalPages; page++) {\n                var isCurrent = page === currentPage;\n                this.renderPaginationItem(page, this.$pagination, isCurrent);\n            }\n\n            this.$pagination.css(\"display\", \"inline-block\");\n        }\n    };\n\n    this.renderProjectSkills = function(project, containerSelector) {\n        var $skills = jQuery(containerSelector).find(\".project__skills\");\n        if (!$skills.length) {\n            return;\n        }\n\n        var skills = project.skills;\n        for (var i = 0; i < skills.length; i++) {\n            var skill = skills[i].trim();\n\n            if (skill === \"\") {\n                continue;\n            }\n\n            JPI.renderNewElement(\"span\", $skills, {\n                text: skill,\n                class: \"project__skill\",\n            });\n        }\n    };\n\n    this.renderProjectLinks = function(project, containerSelector) {\n        var $links = jQuery(containerSelector).find(\".project__links\");\n\n        if (!project.url && !project.download_url && !project.github_url) {\n            if (containerSelector !== this.modalSelector) {\n                $links.remove();\n            }\n            return;\n        }\n\n        var defaultAttributes = {\n            target: \"_blank\",\n            rel: \"noopener\",\n            classes: [\"project__link\"],\n        };\n\n        defaultAttributes.class = defaultAttributes.classes.join(\" \");\n        delete defaultAttributes.classes;\n\n        if (project.url) {\n            defaultAttributes.href = project.url;\n            defaultAttributes.title = \"Link to \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-link fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.download_url) {\n            defaultAttributes.href = project.download_url;\n            defaultAttributes.title = \"Link to download \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-download fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.github_url) {\n            defaultAttributes.href = project.github_url;\n            defaultAttributes.title = \"Link to \" + project.name + \" code on GitHub\";\n            defaultAttributes.html = \"<i class='fab fa-github fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n    };\n\n    this.renderProjectImages = function(project, containerSelector) {\n        if (!project.images || !project.images.length) {\n            return;\n        }\n\n        var $slideShow = jQuery(containerSelector).find(\".slide-show\");\n        var $slidesContainer = $slideShow.find(\".slide-show__slides\");\n        var $slideShowBullets = $slideShow.find(\".slide-show__bullets\");\n\n        // Loop through each image in project\n        var images = project.images;\n        for (var i = 0; i < images.length; i++) {\n            if (!{}.hasOwnProperty.call(images, i)) {\n                continue;\n            }\n\n            var slideTemplate = new JPI.Template(this.slideTemplate);\n            var bulletTemplate = new JPI.Template(this.bulletTemplate);\n\n            var image = images[i];\n            for (var field in image) {\n                if ({}.hasOwnProperty.call(image, field)) {\n                    var value = image[field];\n                    slideTemplate.replace(field, value);\n                    bulletTemplate.replace(field, value);\n                }\n            }\n\n            slideTemplate.renderIn($slidesContainer);\n            bulletTemplate.renderIn($slideShowBullets);\n        }\n    };\n\n    this.renderProject = function(project) {\n        var projectSelector = \"#project-\" + project.id;\n        if (jQuery(projectSelector).length) {\n            return;\n        }\n\n        project = JPI.api.formatProjectData(project);\n\n        this.projects[project.id] = project;\n\n        (new JPI.Template(this.projectTemplate, project)).renderIn(this.$projects);\n\n        this.renderProjectImages(project, projectSelector);\n        this.renderProjectLinks(project, projectSelector);\n    };\n\n    // Sets up events when projects were received\n    this.gotProjects = function(response) {\n        this.$error.text(\"\").hide(600);\n        this.$loading.hide(600);\n        this.$projects.text(\"\");\n        this.$pagination.text(\"\").hide();\n\n        // Send the data, the function to do if data is valid\n        JPI.ajax.renderRowsOrError(\n            response,\n            this.renderProject.bind(this),\n            this.renderError.bind(this),\n            \"No Projects Found.\"\n        );\n\n        if (response && response._total_count) {\n            this.renderPagination(JPI.getInt(response._total_count));\n        }\n    };\n\n    this.getProjects = function() {\n        var query = {\n            filters: {\n                type_id: this.$projectType.filter(\":checked\").val(),\n            },\n            page: this.page,\n            limit: JPI.projects.perPage,\n        };\n\n        JPI.ajax.request({\n            method: \"GET\",\n            url: JPI.projects.apiEndpoint + \"/projects/\",\n            data: query,\n            onSuccess: this.gotProjects.bind(this),\n            onError: this.renderError.bind(this),\n        });\n    };\n\n    this.openProjectModal = function(e) {\n        var projectId = jQuery(e.target).attr(\"data-project-id\");\n        var project = this.projects[projectId];\n        var $modal = this.$modal;\n\n        $modal.find(\".project__links, .project__skills, .slide-show__slides, .slide-show__bullets\").text(\"\");\n\n        $modal.find(\".modal__heading\").text(project.name);\n        $modal.find(\".project__date\").text(project.date);\n        $modal.find(\".project__description\").html(project.long_description);\n\n        var $projectType = $modal.find(\".project__type\");\n\n        $projectType.text(project.type);\n\n        this.renderProjectSkills(project, this.modalSelector);\n        this.renderProjectLinks(project, this.modalSelector);\n        this.renderProjectImages(project, this.modalSelector);\n\n        this.modal.open();\n\n        this.modalSlideShow.start();\n    };\n\n    this.onProjectModalClose = function() {\n        this.modalSlideShow.stop();\n        this.$modalSlidesContainer.css({\n            width: \"\",\n            left: \"\",\n        });\n    };\n\n    this.getNewURL = function(page) {\n        var urlParts = [\"projects\"];\n\n        if (page > 1) {\n            urlParts.push(page);\n        }\n\n        return  \"/\" + urlParts.join(\"/\") + \"/\";\n    };\n\n    this.getNewTitle = function(page) {\n        var title = JPI.projects.titleStart;\n\n        if (page > 1) {\n            title += \" - Page \" + page;\n        }\n\n        title += JPI.projects.titleEnd;\n\n        return title;\n    };\n\n    this.storeLatestSearch = function() {\n        var page = this.page;\n        var title = this.getNewTitle(page);\n        var url = this.getNewURL(page);\n        var state = {\n            page: page,\n        };\n\n        this.url.pathname = url;\n        document.title = title;\n        history.pushState(state, title, this.url.toString());\n\n        if (typeof ga !== \"undefined\") {\n            ga(\"set\", \"page\", url);\n            ga(\"send\", \"pageview\");\n        }\n    };\n\n    this.scrollToProjects = function() {\n        JPI.scrollTo(this.$projects, 20);\n    };\n\n    this.initListeners = function() {\n        this.$projectType.on(\"change\", function(e) {\n            projects.page = 1;\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        this.$projects.on(\"click\", \".project__read-more\", this.openProjectModal.bind(this));\n\n        this.$modal.on(\"closed\", this.onProjectModalClose.bind(this));\n\n        this.$pagination.on(\"click\", \".pagination__link\", function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            var page = jQuery(e.target).text();\n            page = JPI.getInt(page, 1);\n\n            if (projects.page === page) {\n                return;\n            }\n\n            projects.page = page;\n            projects.scrollToProjects();\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        window.addEventListener(\"popstate\", function(e) {\n            var state = e.state || {};\n            var page = state.page || 1;\n\n            document.title = projects.getNewTitle(page);\n\n            projects.page = JPI.getInt(page, 1);\n\n            projects.scrollToProjects();\n            projects.getProjects();\n        });\n    };\n\n    this.init = function() {\n        this.initListeners();\n\n        this.gotProjects(JPI.projects.apiResponse);\n\n        this.$body.on(\"click\", \".js-expandable-image\", function(e) {\n            var expandedSlideShow = new JPI.ExpandedSlideShow();\n            expandedSlideShow.open(e.target, \".js-expandable-image-group\");\n        });\n    };\n\n    jQuery(window).on(\"jpi-css-loaded\", this.init.bind(this));\n}));\n"]}